//*************************************************************************
//Å@MPL-33/PCIW64
//  Function Prototype Declarations Exported from MC06A.DLL [711SS0005f06]
//*************************************************************************
//#include <windows.h>
typedef unsigned short      WORD;
typedef unsigned long       DWORD;
typedef unsigned long long  DWORD64;
typedef void                VOID;
typedef bool                BOOL;
typedef unsigned int        UNIT;
//typedef void*               HANDLE;


//*** user-supplied callback routioe pointer ***
//typedef void ( WINAPI *PLPMC06CALLBACK )( DWORD Status, DWORD UserData );
//typedef void ( WINAPI *PLPMC06CALLBACKEX )( DWORD Status, DWORD64 UserData );
typedef void (*PLPMC06CALLBACK)( int, int );
typedef void (*PLPMC06CALLBACKEX)( int, long );

//*** RESULT STRUCTURE ***
typedef struct MC06_TAG_S_RESULT {
    WORD           MC06_Result[4];
} MC06_S_RESULT;

//*** DATA STRUCTURE ***
typedef struct MC06_TAG_S_DATA {
    WORD           MC06_Data[4];
} MC06_S_DATA;

//*** DEFINITION ***
#define MC06_X						0
#define MC06_Y						1
#define MC06_Z						2
#define MC06_A						3
#define MC06_X1						0
#define MC06_Y1						1
#define MC06_Z1						2
#define MC06_A1						3
#define MC06_X2						4
#define MC06_Y2						5
#define MC06_Z2						6
#define MC06_A2						7
#define MC06_INT0					0
#define MC06_INT1					1
#define MC06_INT2					2
#define MC06_INT0_FACTOR_RDYINT		0x0001
#define MC06_INT0_COMREG_EP			0x0004
#define MC06_INT0_nCOMREG_FL		0x0008
#define MC06_INT1_FACTOR_SS1		0x0080
#define MC06_INT1_FACTOR_SS0		0x0040
#define MC06_INT1_FACTOR_DALM		0x0020
#define MC06_INT2_FACTOR_ADRINT		0x0100
#define MC06_INT2_FACTOR_CNTINT		0x0200
#define MC06_INT2_FACTOR_DFLINT		0x0400
#define MC06_INT2_FACTOR_SPDINT		0x0800

/*** Function Prototype Declarations Exported ***/ 
#if !defined(_MC06FUNC_)
    #define MC06_API    __declspec( dllimport )
#else
    #define MC06_API    __declspec( dllexport )
#endif

#ifdef __cplusplus
extern"C"{
#endif
/*
MC06_API BOOL   WINAPI MC06_BOpen( WORD BoardNo, WORD Axis, DWORD FAR* phDev, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BClose( DWORD hDev, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_IWDrive( DWORD hDev, WORD Cmd, MC06_S_DATA FAR* psData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_IWData( DWORD hDev, MC06_S_DATA FAR* psData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWDriveCommand( DWORD hDev, WORD FAR* pCmd, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWDriveData1( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWDriveData2( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWDriveData3( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRStatus1( DWORD hDev, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRStatus2( DWORD hDev, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRStatus3( DWORD hDev, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRStatus4( DWORD hDev, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRStatus5( DWORD hDev, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_IRDrive( DWORD hDev, MC06_S_DATA FAR* psData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRDriveData1( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRDriveData2( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRDriveData3( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWaitDriveCommand( DWORD hDev, WORD WaitTime, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BIsWait( DWORD hDev, WORD FAR* pWait, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BBreakWait( DWORD hDev, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_IWCounter( DWORD hDev, WORD Cmd, MC06_S_DATA FAR* psData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWCounterCommand( DWORD hDev, WORD FAR* pCmd, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWCounterData1( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWCounterData2( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWCounterData3( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_IWHensa( DWORD hDev, WORD Cmd, MC06_S_DATA FAR* psData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWHensaCommand( DWORD hDev, WORD FAR* pCmd, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWHensaData1( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWHensaData2( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWHensaData3( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHensaStatus1( DWORD hDev, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHensaData1( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHensaData2( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHensaData3( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWaitHensaCommand( DWORD hDev, WORD WaitTime, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_IWHardConfig( DWORD hDev, WORD Cmd, MC06_S_DATA FAR* psData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWHardConfigCommand( DWORD hDev, WORD FAR* pCmd, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWHardConfigData1( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWHardConfigData2( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BWHardConfigData3( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHardConfigSigStatus( DWORD hDev, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHardConfigSigStatus1( DWORD hDev, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHardConfigSigStatus2( DWORD hDev, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHardConfigData1( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHardConfigData2( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL   WINAPI MC06_BRHardConfigData3( DWORD hDev, WORD FAR* pData, MC06_S_RESULT FAR* psResult );
MC06_API VOID   WINAPI MC06_SetData1( DWORD Data, MC06_S_DATA FAR* psData );
MC06_API VOID   WINAPI MC06_SetData2( DWORD Data1, DWORD Data2, MC06_S_DATA FAR* psData );
MC06_API VOID   WINAPI MC06_SetData3( DWORD Data, MC06_S_DATA FAR* psData1, MC06_S_DATA FAR* psData2 );
MC06_API VOID   WINAPI MC06_SetData4( WORD Data, MC06_S_DATA FAR* psData );
MC06_API DWORD  WINAPI MC06_GetData( MC06_S_DATA FAR* psData );
MC06_API BOOL	WINAPI MC06_SetIntCallBack( DWORD hDev, WORD IntSelect, WORD IntFactor, PLPMC06CALLBACK Func, DWORD UserData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL	WINAPI MC06_SetIntCallBackEx( DWORD hDev, WORD IntSelect, WORD IntFactor, PLPMC06CALLBACKEX Func, DWORD64 UserData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL	WINAPI MC06_SetIntMessage( DWORD hDev, WORD IntSelect, WORD IntFactor, HWND hWnd, UINT Message, DWORD UserData, MC06_S_RESULT FAR* psResult );
MC06_API BOOL	WINAPI MC06_SetIntEvent( DWORD hDev, WORD IntSelect, WORD IntFactor, HANDLE hEvent, MC06_S_RESULT FAR* psResult );
MC06_API BOOL	WINAPI MC06_ReadIntStatus( DWORD hDev, WORD IntSelect, WORD FAR* pStatus, MC06_S_RESULT FAR* psResult );
MC06_API BOOL	WINAPI MC06_ClearIntSet( DWORD hDev, MC06_S_RESULT FAR* psResult );
MC06_API BOOL	WINAPI MC06_OpenDevInt( DWORD hDev, MC06_S_RESULT FAR *psResult );
MC06_API BOOL	WINAPI MC06_CloseDevInt( DWORD hDev, MC06_S_RESULT FAR *psResult );
MC06_API BOOL	WINAPI MC06_SetComregMode( DWORD hDev, WORD SpdIntFlag, MC06_S_RESULT FAR *psResult );
MC06_API BOOL	WINAPI MC06_ClrComregMode( DWORD hDev, MC06_S_RESULT FAR *psResult );
*/
MC06_API BOOL   MC06_BOpen( WORD, WORD, DWORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BClose( DWORD, MC06_S_RESULT* );
MC06_API BOOL   MC06_IWDrive( DWORD, WORD, MC06_S_DATA*, MC06_S_RESULT* );
MC06_API BOOL   MC06_IWData( DWORD, MC06_S_DATA*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWDriveCommand( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWDriveData1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWDriveData2( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWDriveData3( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRStatus1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRStatus2( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRStatus3( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRStatus4( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRStatus5( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_IRDrive( DWORD, MC06_S_DATA*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRDriveData1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRDriveData2( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRDriveData3( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWaitDriveCommand( DWORD, WORD, MC06_S_RESULT* );
MC06_API BOOL   MC06_BIsWait( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BBreakWait( DWORD, MC06_S_RESULT* );
MC06_API BOOL   MC06_IWCounter( DWORD, WORD, MC06_S_DATA*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWCounterCommand( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWCounterData1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWCounterData2( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWCounterData3( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_IWHensa( DWORD, WORD, MC06_S_DATA*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWHensaCommand( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWHensaData1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWHensaData2( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWHensaData3( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHensaStatus1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHensaData1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHensaData2( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHensaData3( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWaitHensaCommand( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_IWHardConfig( DWORD, WORD, MC06_S_DATA*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWHardConfigCommand( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWHardConfigData1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWHardConfigData2( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BWHardConfigData3( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHardConfigSigStatus( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHardConfigSigStatus1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHardConfigSigStatus2( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHardConfigData1( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHardConfigData2( DWORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_BRHardConfigData3( DWORD, WORD*, MC06_S_RESULT* );
MC06_API VOID   MC06_SetData1( DWORD, MC06_S_DATA* );
MC06_API VOID   MC06_SetData2( DWORD, DWORD, MC06_S_DATA* );
MC06_API VOID   MC06_SetData3( DWORD, MC06_S_DATA*, MC06_S_DATA* );
MC06_API VOID   MC06_SetData4( short, MC06_S_DATA* );
MC06_API DWORD  MC06_GetData( MC06_S_DATA* );
//MC06_API BOOL   MC06_SetIntCallBack( DWORD, WORD, WORD, PLPMC06CALLBACK, DWORD, MC06_S_RESULT* );
//MC06_API BOOL   MC06_SetIntCallBackEx( DWORD, WORD, WORD, PLPMC06CALLBACKEX, DWORD64, MC06_S_RESULT* );
//MC06_API BOOL   MC06_SetIntMessage( DWORD, WORD, WORD, HWND, UINT, DWORD, MC06_S_RESULT* );
MC06_API BOOL   MC06_SetIntEvent( DWORD, WORD, WORD, DWORD, MC06_S_RESULT* );
MC06_API BOOL   MC06_ReadIntStatus( DWORD, WORD, WORD*, MC06_S_RESULT* );
MC06_API BOOL   MC06_ClearIntSet( DWORD, MC06_S_RESULT* );
MC06_API BOOL   MC06_OpenDevInt( DWORD, MC06_S_RESULT* );
MC06_API BOOL   MC06_CloseDevInt( DWORD, MC06_S_RESULT* );
MC06_API BOOL   MC06_SetComregMode( DWORD, WORD, MC06_S_RESULT* );
MC06_API BOOL   MC06_ClrComregMode( DWORD, MC06_S_RESULT* );

#ifdef __cplusplus
}
#endif

